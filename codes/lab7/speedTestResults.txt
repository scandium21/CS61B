This program inserts random Strings of length L
into different types of maps as <String, Integer> pairs.

Please enter desired length of each string: 6

Enter # strings to insert into the maps: 10000
class ULLMap: 0.29 sec
class BSTMap: 0.01 sec
Java's Built-in TreeMap: 0.01 sec

Enter # strings to insert into the maps: 100000
--Stack Overflow -- couldn't add 100000 strings of length 6.
class BSTMap: 0.09 sec
Java's Built-in TreeMap: 0.10 sec


This program inserts lexicographically increasing Strings into Maps as <String, Integer> pairs.

Enter # strings to insert into the maps: 10000
class ULLMap: 0.82 sec
class BSTMap: 0.73 sec
Java's Built-in TreeMap: 0.01 sec
Java's Built-in HashMap: 0.00 sec


Enter # strings to insert into the maps: 100000
--Stack Overflow -- couldn't add 100000 strings.
--Stack Overflow -- couldn't add 100000 strings.
Java's Built-in TreeMap: 0.09 sec
Java's Built-in HashMap: 0.06 sec

Enter # strings to insert into the maps: 15000
class ULLMap: 1.76 sec
class BSTMap: 1.40 sec
Java's Built-in TreeMap: 0.01 sec
Java's Built-in HashMap: 0.01 sec

Enter # strings to insert into the maps: 20000
class ULLMap: 5.13 sec
--Stack Overflow -- couldn't add 20000 strings.
Java's Built-in TreeMap: 0.01 sec
Java's Built-in HashMap: 0.01 sec